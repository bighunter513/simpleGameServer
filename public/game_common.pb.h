// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_common.proto

#ifndef PROTOBUF_game_5fcommon_2eproto__INCLUDED
#define PROTOBUF_game_5fcommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace protocols {
namespace common {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_game_5fcommon_2eproto();
void protobuf_AssignDesc_game_5fcommon_2eproto();
void protobuf_ShutdownFile_game_5fcommon_2eproto();


enum ErrorCode {
  EC_SUCCESS = 0,
  EC_INVALID_REQUEST = 1,
  EC_INVALID_ARGUMENT = 2,
  EC_IO_ERROR = 3,
  EC_NET_ERROR = 4,
  EC_DB_ERROR = 5,
  EC_ACTION_DENY = 6
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = EC_SUCCESS;
const ErrorCode ErrorCode_MAX = EC_ACTION_DENY;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCode_descriptor(), value);
}
inline bool ErrorCode_Parse(
    const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
    ErrorCode_descriptor(), name, value);
}
enum MessageType {
  MSG_TYPE_REQUEST = 0,
  MSG_TYPE_RESPONSE = 1,
  MSG_TYPE_NOTIFY = 2
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = MSG_TYPE_REQUEST;
const MessageType MessageType_MAX = MSG_TYPE_NOTIFY;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
enum MessageAction {
  MSG_ACTION_ACC_LOGIN = 1,
  MSG_ACTION_PLAYER_LOGIN = 2,
  MSG_ACTION_INIT_CONNECTION = 3,
  MSG_ACTION_GET_ACCOUNT_LIST = 4,
  MSG_ACTION_MOVE_START = 5,
  MSG_ACTION_CREATE_PLAYER = 7,
  MSG_ACTION_PLAYER_INFO = 8,
  MSG_ACTION_BUDDY_DETAIL_INFO = 9,
  MSG_ACTION_HEARTBEAT = 10,
  MSG_ACTION_KICK_PLAYER = 11
};
bool MessageAction_IsValid(int value);
const MessageAction MessageAction_MIN = MSG_ACTION_ACC_LOGIN;
const MessageAction MessageAction_MAX = MSG_ACTION_KICK_PLAYER;
const int MessageAction_ARRAYSIZE = MessageAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageAction_descriptor();
inline const ::std::string& MessageAction_Name(MessageAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageAction_descriptor(), value);
}
inline bool MessageAction_Parse(
    const ::std::string& name, MessageAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageAction>(
    MessageAction_descriptor(), name, value);
}
enum ENUM_ATTR {
  NONE = 0,
  HP = 1,
  MAX_HP = 2,
  STA = 3,
  STRENGTH = 4,
  TECHNIQUE = 5,
  INTELLIGENCE = 6,
  SPIRIT = 7,
  AGILE = 8,
  PHY_ATTACK = 9,
  PHY_DEFENCE = 10,
  MAG_ATTACK = 11,
  MAG_DEFENCE = 12,
  PHY_AT_HIT = 13,
  MAG_AT_HIT = 14,
  PHY_CRITICAL = 15,
  PHY_CRITICAL_DEFENCE = 16,
  MAG_CRITICAL = 17,
  MAG_CRITICAL_DEFENCE = 18,
  PHY_AT_DODGE = 19,
  MAG_AT_DODGE = 20,
  PHY_AT_HIT_RATE = 21,
  MAG_AT_HIT_RATE = 22,
  PHY_CRITICAL_RATE = 23,
  PHY_CRITICAL_DEFENCE_RATE = 24,
  MAG_CRITICAL_RATE = 25,
  MAG_CRITICAL_DEFENCE_RATE = 26,
  PHY_AT_DODGE_RATE = 27,
  MAG_AT_DODGE_RATE = 28,
  SPEED = 29,
  FIRE_RESISTANCE = 30,
  ICE_RESISTANCE = 31,
  SHOCK_RESISTANCE = 32,
  FIRE_DAMAGE_INCREASE = 33,
  ICE_DAMAGE_INCREASE = 34,
  SHOCK_DAMAGE_INCREASE = 35,
  PHY_DAMAGE_REDUCTION_RATE = 36,
  PHY_CRI_MULTI_RATE = 37,
  MAG_CRI_MULTI_RATE = 38,
  MAG_COMBO_RATE = 39,
  COUNTER_ATTACK_RATE = 40,
  DAMAGE_REBOUND_RATE = 41,
  BLOOD_SUCK = 42,
  ENUM_ATTR_NUMBER = 64
};
bool ENUM_ATTR_IsValid(int value);
const ENUM_ATTR ENUM_ATTR_MIN = NONE;
const ENUM_ATTR ENUM_ATTR_MAX = ENUM_ATTR_NUMBER;
const int ENUM_ATTR_ARRAYSIZE = ENUM_ATTR_MAX + 1;

const ::google::protobuf::EnumDescriptor* ENUM_ATTR_descriptor();
inline const ::std::string& ENUM_ATTR_Name(ENUM_ATTR value) {
  return ::google::protobuf::internal::NameOfEnum(
    ENUM_ATTR_descriptor(), value);
}
inline bool ENUM_ATTR_Parse(
    const ::std::string& name, ENUM_ATTR* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ENUM_ATTR>(
    ENUM_ATTR_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace protocols

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocols::common::ErrorCode>() {
  return ::protocols::common::ErrorCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocols::common::MessageType>() {
  return ::protocols::common::MessageType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocols::common::MessageAction>() {
  return ::protocols::common::MessageAction_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocols::common::ENUM_ATTR>() {
  return ::protocols::common::ENUM_ATTR_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_5fcommon_2eproto__INCLUDED
